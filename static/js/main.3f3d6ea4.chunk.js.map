{"version":3,"sources":["components/LadderSelector.js","components/Header.js","components/Ladder.js","components/InventoryItem.js","components/CharacterInventory.js","components/CharacterGems.js","components/CharacterPanel.js","components/LadderNavigator.js","components/App.js","serviceWorker.js","index.js"],"names":["LadderSelector","props","changeLadder","bind","Dropdown","as","NavItem","Toggle","variant","id","this","selectedLadder","Menu","ladders","map","ladder","Item","key","value","onClick","e","onLadderChange","target","React","Component","Header","changeLimit","Navbar","bg","className","Brand","href","Nav","Text","ladderLimit","onLimitChange","Ladder","Table","style","striped","bordered","hover","entries","entry","character","name","rank","level","selectCharacter","class","account","rel","onCharacterSelect","InventoryItem","item","inventoryId","toLowerCase","frameType","OverlayTrigger","placement","delay","show","hide","overlay","renderTooltip","trigger","Image","src","icon","Tooltip","typeLine","properties","property","values","length","displayMode","i","ret","replace","implicitMods","mod","utilityMods","explicitMods","craftedMods","CharacterInventory","state","items","CharacterGems","hasOwnProperty","renderGems","groups","_","socketedItems","groupBy","x","sockets","socket","group","gem","CharacterPanel","loaded","failedToLoad","body","Modal","onHide","onClose","dialogClassName","Title","Body","Footer","Button","setState","prevProps","fetch","then","res","json","data","catch","console","log","LadderNavigator","changePage","page","onPageChange","App","selectedCharacter","selectedAccount","currentPage","onCloseCharacterPanel","newLadder","limit","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3f3d6ea4.chunk.js","sourcesContent":["import React from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport NavItem from 'react-bootstrap/NavItem'\r\n\r\nclass LadderSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeLadder = this.changeLadder.bind(this);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Dropdown as={NavItem}>\r\n                <Dropdown.Toggle variant=\"secondary\" id=\"ladder-selector\">\r\n                    {this.props.selectedLadder}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    {this.props.ladders.map((ladder) => {\r\n                        return(<Dropdown.Item as=\"button\" key={ladder.id} value={ladder.id} onClick={this.changeLadder}>{ladder.id}</Dropdown.Item>)\r\n                    })}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        )\r\n    }\r\n\r\n    changeLadder (e) {\r\n        this.props.onLadderChange(e.target.value);\r\n    }\r\n}\r\n\r\nexport default LadderSelector;","import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport LadderSelector from './LadderSelector'\r\nimport NavItem from 'react-bootstrap/NavItem'\r\n\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.changeLimit = this.changeLimit.bind(this);\r\n  }\r\n\r\n  render () {\r\n    return (\r\n          <Navbar bg=\"dark\" variant=\"dark\" className=\"Header\">\r\n              <Navbar.Brand href=\"\">Path of Exile Ladder</Navbar.Brand>\r\n              <Nav>\r\n                <Navbar.Text>Select Ladder: </Navbar.Text>\r\n                <LadderSelector selectedLadder={this.props.selectedLadder} onLadderChange={this.props.onLadderChange} ladders={this.props.ladders} />\r\n              </Nav>\r\n              <Nav>\r\n                <Navbar.Text> Entries per page: </Navbar.Text>\r\n                <Dropdown as={NavItem}>\r\n                  <Dropdown.Toggle variant=\"secondary\" id=\"ladder-selector\">\r\n                    {this.props.ladderLimit}\r\n                  </Dropdown.Toggle>\r\n                  <Dropdown.Menu>\r\n                        <Dropdown.Item as=\"button\" key={20} value={20} onClick={this.changeLimit}>20</Dropdown.Item>\r\n                        <Dropdown.Item as=\"button\" key={50} value={50} onClick={this.changeLimit}>50</Dropdown.Item>\r\n                        <Dropdown.Item as=\"button\" key={100} value={100} onClick={this.changeLimit}>100</Dropdown.Item>\r\n                  </Dropdown.Menu>\r\n                </Dropdown>\r\n              </Nav>\r\n          </Navbar>\r\n    )\r\n  }\r\n\r\n  changeLimit(e) {\r\n    this.props.onLimitChange(e.target.value);\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nclass Ladder extends React.Component {\r\n    render () {\r\n        return (\r\n            <Table style={{'marginBottom': '0'}} variant=\"dark\" striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{'width': \"10%\"}}>Rank</th>\r\n                        <th style={{'width': \"10%\"}}>Level</th>\r\n                        <th style={{'width': \"30%\"}}>Character</th>\r\n                        <th style={{'width': \"20%\"}}>Ascendancy</th>\r\n                        <th style={{'width': \"30%\"}}>Account</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.entries.map((entry) => {\r\n                            return(\r\n                                <tr key={entry.character.name}>\r\n                                    <th>{entry.rank}</th>\r\n                                    <th>{entry.character.level}</th>\r\n                                    <th><a href=\"/path-ladder2/\" value={entry} className=\"ladder-character-name text-light underline\" onClick={this.selectCharacter.bind(this, entry)}>{entry.character.name}</a></th>\r\n                                    <th>{entry.character.class}</th>\r\n                                    <th><a value={entry.account.name} className=\"text-light underline\" target=\"_blank\" rel=\"noopener noreferrer\" href={`https://www.pathofexile.com/account/view-profile/${entry.account.name}`}>{entry.account.name}</a></th>\r\n                                </tr> \r\n                            )\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n\r\n    selectCharacter (entry) {\r\n        this.props.onCharacterSelect(entry.character.name, entry.account.name)\r\n    }\r\n}\r\n\r\nexport default Ladder;","import React, {Component} from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nclass InventoryItem extends Component {\r\n    render () {\r\n        const className = (this.props.item.inventoryId).toLowerCase() + ' item' + this.props.item.frameType;\r\n        if(className === ' item')\r\n            return null;\r\n        return(\r\n            <OverlayTrigger\r\n                placement=\"auto-end\"\r\n                delay={{ show: 100, hide: 100 }}\r\n                overlay={this.renderTooltip.bind(this)}\r\n                trigger={['hover', 'focus']}\r\n            >\r\n            <div className={className}>\r\n                <Image className='item-image' src={this.props.item.icon} />\r\n            </div>\r\n            </OverlayTrigger>\r\n        )\r\n    }\r\n\r\n    renderTooltip (props) {\r\n        return (\r\n            <Tooltip id=\"tooltip\" {...props}>\r\n                <div className={'item-tooltip-name'+this.props.item.frameType}>\r\n                    {this.props.item.name !== \"\" && this.props.item.name + '\\n'}\r\n                    {this.props.item.typeLine}\r\n                </div>\r\n                {this.props.item.properties && this.props.item.properties.map((property) => {\r\n                    if(property.values.length > 0) {\r\n                        if(property.displayMode === 0)\r\n                            return(<div className=\"item-tooltip-properties\" key={property.name}>{property.name}: {property.values.map((value, i) => {\r\n                                if(i !== 0)\r\n                                    return(<span>, <span key={i} className={'item-tooltip-properties'+value[1]}>{value[0]}</span></span>)\r\n                                else\r\n                                    return(<span key={i} className={'item-tooltip-properties'+value[1]}>{value[0]}</span>)\r\n                            })}</div>)\r\n                        if(property.displayMode === 3) {\r\n                            var ret = property.name;\r\n                            for(var i = 0; i < property.values.length; i++) {\r\n                                ret = ret.replace(`{${i}}`, property.values[i][0])\r\n                            }\r\n                            return(<div className=\"item-tooltip-properties\" key={property.name}><span className={'item-tooltip-properties'+property.values[0][1]}>{ret}</span></div>);\r\n                        }\r\n                    }\r\n                    return(<div className=\"item-tooltip-properties\" key={property.name}>{property.name}</div>)\r\n                })}\r\n                {this.props.item.properties && <hr className=\"item-tooltip-divider\" />}\r\n                {this.props.item.implicitMods && this.props.item.implicitMods.map((mod) => {\r\n                    return(<div className=\"item-tooltip-mods\" key={mod}>{mod}<hr className=\"item-tooltip-divider\" /></div>)\r\n                })}\r\n                {this.props.item.utilityMods && this.props.item.utilityMods.map((mod) => {\r\n                    return(<div className=\"item-tooltip-mods\" key={mod}>{mod}</div>)\r\n                })}\r\n                {this.props.item.explicitMods && this.props.item.explicitMods.map((mod) => {\r\n                    return(<div className=\"item-tooltip-mods\"  key={mod}>{mod}</div>)\r\n                })}\r\n                {this.props.item.craftedMods && this.props.item.craftedMods.map((mod) => {\r\n                    return(<div className=\"item-tooltip-crafted-mods\"  key={mod}>{mod}</div>)\r\n                })}\r\n            </Tooltip>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InventoryItem;","import React, {Component} from 'react';\r\nimport InventoryItem from './InventoryItem';\r\n\r\nclass CharacterInventory extends Component {\r\n    state = {\r\n        items: this.props.items\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"character-items\">\r\n                {this.state.items.map((item) => {\r\n                    if(item.inventoryId !== 'Flask') {\r\n                        return(<InventoryItem key={item.id} item={item} />)\r\n                    }\r\n                    return(null)\r\n                })}\r\n                <div className=\"flasks\">\r\n                    {this.state.items.map((item) => {\r\n                        if(item.inventoryId === 'Flask') {\r\n                            return(<InventoryItem key={item.id} item={item} />)\r\n                        }\r\n                        return(null)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterInventory;","import React, {Component} from 'react';\r\nimport Image from 'react-bootstrap/Image'\r\nimport _ from 'lodash'\r\n\r\nclass CharacterGems extends Component {\r\n    state = {\r\n        items: this.props.items\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"gems\">\r\n                {this.state.items.map((item) => {\r\n                    if(item.hasOwnProperty('socketedItems') && item.inventoryId !== 'Belt') {\r\n                        return(this.renderGems(item))\r\n                    }\r\n                    return(null)\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderGems(item) {\r\n        var groups = _(item.socketedItems).groupBy(item.socketedItems, function(x) {\r\n            return(item.sockets[x.socket].group)\r\n        }).map(function(x) {\r\n            return(x);\r\n        }).value()\r\n\r\n        return (\r\n            <div className=\"gem-group\">\r\n                <div className=\"gem-group-item-slot\">{item.inventoryId}</div>\r\n                {groups.map((group) => {\r\n                    return(\r\n                        <div className=\"linked-gems\">\r\n                            {group.map((gem) => {\r\n                                return(<div className=\"gem\"><Image style={{'width': '32px', 'margin-right': '5px'}} src={gem.icon}></Image>{gem.typeLine}</div>)\r\n                            })}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterGems;","import React from 'react'\r\nimport fetch from 'node-fetch';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport CharacterInventory from './CharacterInventory'\r\nimport CharacterGems from './CharacterGems'\r\n\r\nclass CharacterPanel extends React.Component {\r\n    state = {\r\n        items: [],\r\n        loaded: false,\r\n        failedToLoad: false\r\n    }\r\n\r\n    render () {\r\n        if(this.props.character === '')\r\n            return(null)\r\n\r\n        var body = null;\r\n\r\n        if(this.state.loaded === false)\r\n            body = <div style={{'display': 'flex', 'height': 'inherit', 'justifyContent': 'center', 'alignItems': 'center', 'width': '540px'}}>Loading items...</div>\r\n        else if (this.state.failedToLoad === true)\r\n            body = <div style={{'display': 'flex', 'height': 'inherit', 'justifyContent': 'center', 'alignItems': 'center', 'width': '540px'}}>Failed to load items, this account is likely private</div>\r\n        else body = <div><CharacterInventory items={this.state.items} /><CharacterGems items={this.state.items} /></div>\r\n\r\n        return(\r\n            <Modal style={{'maxWidth': '100%', 'maxHeight': '100%', 'overflow': 'auto'}} show={true} onHide={this.onClose.bind(this)} dialogClassName='character-panel'>\r\n                <Modal.Header className=\"bg-dark text-light\">\r\n                    <Modal.Title>{this.props.character}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"bg-dark text-light\">\r\n                    {body}\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"bg-dark text-light\">\r\n                    <Button variant=\"secondary\" onClick={this.onClose.bind(this)}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    onClose (e) {\r\n        this.setState({failedToLoad: false, loaded: false, items: []})\r\n        this.props.onClose(e);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.account !== prevProps.account && this.props.account !== '')\r\n            fetch(`https://guarded-falls-96614.herokuapp.com/https://www.pathofexile.com/character-window/get-items?accountName=${this.props.account}&character=${this.props.character}`)\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    if(data.hasOwnProperty('items'))\r\n                        this.setState({items: data.items, loaded: true, failedToLoad: false})\r\n                    else this.setState({failedToLoad: true, loaded: true})\r\n                })\r\n                .catch(console.log)\r\n    }\r\n}\r\n\r\nexport default CharacterPanel","import React from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass LadderNavigator extends React.Component {\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ladder-navigator\">\r\n                <Button variant=\"secondary\" onClick={this.changePage.bind(this,1)}>1</Button>\r\n                <Button variant=\"secondary\" onClick={this.changePage.bind(this,2)}>2</Button>\r\n                <Button variant=\"secondary\" onClick={this.changePage.bind(this,3)}>3</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    changePage (page) {\r\n        this.props.onPageChange(page)\r\n    }\r\n}\r\n\r\nexport default LadderNavigator;","import React from 'react';\r\nimport Header from './Header'\r\nimport Ladder from './Ladder'\r\nimport CharacterPanel from './CharacterPanel'\r\nimport LadderNavigator from './LadderNavigator'\r\nimport '../custom.scss'\r\nimport fetch from 'node-fetch';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLadderChange = this.onLadderChange.bind(this);\r\n    this.onCharacterSelect = this.onCharacterSelect.bind(this);\r\n    this.onCloseCharacterPanel = this.onCloseCharacterPanel.bind(this);\r\n    this.onPageChange = this.onPageChange.bind(this);\r\n    this.onLimitChange = this.onLimitChange.bind(this);\r\n  }\r\n\r\n  state = {\r\n    ladders: [],\r\n    selectedLadder: 'Standard',\r\n    entries: [],\r\n    selectedCharacter: '',\r\n    selectedAccount: '',\r\n    currentPage: 1,\r\n    ladderLimit: 20\r\n  }\r\n\r\n  render () {\r\n      return (\r\n      <div className=\"App\">\r\n        <Header ladderLimit={this.state.ladderLimit} ladders={this.state.ladders} selectedLadder={this.state.selectedLadder} onLimitChange={this.onLimitChange} onLadderChange={this.onLadderChange} />        \r\n        <Ladder entries={this.state.entries} onCharacterSelect={this.onCharacterSelect} />\r\n        <LadderNavigator onPageChange={this.onPageChange} currentPage={this.state.currentPage}/>        \r\n        <CharacterPanel onClose={this.onCloseCharacterPanel} account={this.state.selectedAccount} character={this.state.selectedCharacter}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount () {\r\n    fetch('https://guarded-falls-96614.herokuapp.com/http://api.pathofexile.com/leagues')\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          ladders: data\r\n        })\r\n      })\r\n      .catch(console.log)\r\n\r\n      this.onLadderChange (\"Standard\")\r\n  }\r\n\r\n  onLadderChange (newLadder) {\r\n    fetch(`https://guarded-falls-96614.herokuapp.com/http://api.pathofexile.com/ladders/${newLadder}`)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          entries: data.entries\r\n        })\r\n      })\r\n      .catch(console.log)\r\n\r\n      this.setState({selectedLadder: newLadder})\r\n  }\r\n  \r\n  onCharacterSelect (character, account) {\r\n    this.setState({\r\n      selectedCharacter: character,\r\n      selectedAccount: account\r\n    });\r\n  }\r\n\r\n  onCloseCharacterPanel (e) {\r\n    this.setState({\r\n      selectedCharacter: '',\r\n      selectedAccount: ''\r\n    })\r\n  }\r\n\r\n\r\n  onPageChange (page) {\r\n    fetch(`https://guarded-falls-96614.herokuapp.com/http://api.pathofexile.com/ladders/${this.state.selectedLadder}?offset=${(page-1)*this.state.ladderLimit}&limit=${this.state.ladderLimit}`)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          entries: data.entries,\r\n          currentPage: page\r\n        })\r\n      })\r\n      .catch(console.log)\r\n  }\r\n\r\n  onLimitChange (limit) {\r\n    fetch(`https://guarded-falls-96614.herokuapp.com/http://api.pathofexile.com/ladders/${this.state.selectedLadder}?limit=${limit}`)\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          entries: data.entries,\r\n          ladderLimit: limit\r\n        })\r\n      })\r\n      .catch(console.log)\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './custom.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}